// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, wasmJs]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.mohamedrejeb.richeditor:richeditor-compose>
open annotation class com.mohamedrejeb.richeditor.annotation/ExperimentalRichTextApi : kotlin/Annotation { // com.mohamedrejeb.richeditor.annotation/ExperimentalRichTextApi|null[0]
    constructor <init>() // com.mohamedrejeb.richeditor.annotation/ExperimentalRichTextApi.<init>|<init>(){}[0]
}

open annotation class com.mohamedrejeb.richeditor.annotation/InternalRichTextApi : kotlin/Annotation { // com.mohamedrejeb.richeditor.annotation/InternalRichTextApi|null[0]
    constructor <init>() // com.mohamedrejeb.richeditor.annotation/InternalRichTextApi.<init>|<init>(){}[0]
}

abstract interface com.mohamedrejeb.richeditor.model/ImageLoader { // com.mohamedrejeb.richeditor.model/ImageLoader|null[0]
    abstract fun load(kotlin/Any, androidx.compose.runtime/Composer?, kotlin/Int): com.mohamedrejeb.richeditor.model/ImageData? // com.mohamedrejeb.richeditor.model/ImageLoader.load|load(kotlin.Any;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
}

abstract interface com.mohamedrejeb.richeditor.model/RichSpanStyle { // com.mohamedrejeb.richeditor.model/RichSpanStyle|null[0]
    abstract val acceptNewTextInTheEdges // com.mohamedrejeb.richeditor.model/RichSpanStyle.acceptNewTextInTheEdges|{}acceptNewTextInTheEdges[0]
        abstract fun <get-acceptNewTextInTheEdges>(): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichSpanStyle.acceptNewTextInTheEdges.<get-acceptNewTextInTheEdges>|<get-acceptNewTextInTheEdges>(){}[0]
    abstract val spanStyle // com.mohamedrejeb.richeditor.model/RichSpanStyle.spanStyle|{}spanStyle[0]
        abstract fun <get-spanStyle>(): kotlin/Function1<com.mohamedrejeb.richeditor.model/RichTextConfig, androidx.compose.ui.text/SpanStyle> // com.mohamedrejeb.richeditor.model/RichSpanStyle.spanStyle.<get-spanStyle>|<get-spanStyle>(){}[0]

    abstract fun (androidx.compose.ui.graphics.drawscope/DrawScope).drawCustomStyle(androidx.compose.ui.text/TextLayoutResult, androidx.compose.ui.text/TextRange, com.mohamedrejeb.richeditor.model/RichTextConfig, kotlin/Float = ..., kotlin/Float = ...) // com.mohamedrejeb.richeditor.model/RichSpanStyle.drawCustomStyle|drawCustomStyle@androidx.compose.ui.graphics.drawscope.DrawScope(androidx.compose.ui.text.TextLayoutResult;androidx.compose.ui.text.TextRange;com.mohamedrejeb.richeditor.model.RichTextConfig;kotlin.Float;kotlin.Float){}[0]
    open fun (androidx.compose.ui.text/AnnotatedString.Builder).appendCustomContent(com.mohamedrejeb.richeditor.model/RichTextState): androidx.compose.ui.text/AnnotatedString.Builder // com.mohamedrejeb.richeditor.model/RichSpanStyle.appendCustomContent|appendCustomContent@androidx.compose.ui.text.AnnotatedString.Builder(com.mohamedrejeb.richeditor.model.RichTextState){}[0]

    final class Code : com.mohamedrejeb.richeditor.model/RichSpanStyle { // com.mohamedrejeb.richeditor.model/RichSpanStyle.Code|null[0]
        constructor <init>(androidx.compose.ui.unit/TextUnit = ..., androidx.compose.ui.unit/TextUnit = ..., com.mohamedrejeb.richeditor.model/TextPaddingValues = ...) // com.mohamedrejeb.richeditor.model/RichSpanStyle.Code.<init>|<init>(androidx.compose.ui.unit.TextUnit;androidx.compose.ui.unit.TextUnit;com.mohamedrejeb.richeditor.model.TextPaddingValues){}[0]

        final val acceptNewTextInTheEdges // com.mohamedrejeb.richeditor.model/RichSpanStyle.Code.acceptNewTextInTheEdges|{}acceptNewTextInTheEdges[0]
            final fun <get-acceptNewTextInTheEdges>(): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichSpanStyle.Code.acceptNewTextInTheEdges.<get-acceptNewTextInTheEdges>|<get-acceptNewTextInTheEdges>(){}[0]
        final val spanStyle // com.mohamedrejeb.richeditor.model/RichSpanStyle.Code.spanStyle|{}spanStyle[0]
            final fun <get-spanStyle>(): kotlin/Function1<com.mohamedrejeb.richeditor.model/RichTextConfig, androidx.compose.ui.text/SpanStyle> // com.mohamedrejeb.richeditor.model/RichSpanStyle.Code.spanStyle.<get-spanStyle>|<get-spanStyle>(){}[0]

        final fun (androidx.compose.ui.graphics.drawscope/DrawScope).drawCustomStyle(androidx.compose.ui.text/TextLayoutResult, androidx.compose.ui.text/TextRange, com.mohamedrejeb.richeditor.model/RichTextConfig, kotlin/Float, kotlin/Float) // com.mohamedrejeb.richeditor.model/RichSpanStyle.Code.drawCustomStyle|drawCustomStyle@androidx.compose.ui.graphics.drawscope.DrawScope(androidx.compose.ui.text.TextLayoutResult;androidx.compose.ui.text.TextRange;com.mohamedrejeb.richeditor.model.RichTextConfig;kotlin.Float;kotlin.Float){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichSpanStyle.Code.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // com.mohamedrejeb.richeditor.model/RichSpanStyle.Code.hashCode|hashCode(){}[0]
    }

    final class Image : com.mohamedrejeb.richeditor.model/RichSpanStyle { // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image|null[0]
        constructor <init>(kotlin/Any, androidx.compose.ui.unit/TextUnit, androidx.compose.ui.unit/TextUnit, kotlin/String? = ...) // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.<init>|<init>(kotlin.Any;androidx.compose.ui.unit.TextUnit;androidx.compose.ui.unit.TextUnit;kotlin.String?){}[0]

        final val acceptNewTextInTheEdges // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.acceptNewTextInTheEdges|{}acceptNewTextInTheEdges[0]
            final fun <get-acceptNewTextInTheEdges>(): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.acceptNewTextInTheEdges.<get-acceptNewTextInTheEdges>|<get-acceptNewTextInTheEdges>(){}[0]
        final val contentDescription // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.contentDescription|{}contentDescription[0]
            final fun <get-contentDescription>(): kotlin/String? // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.contentDescription.<get-contentDescription>|<get-contentDescription>(){}[0]
        final val model // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.model|{}model[0]
            final fun <get-model>(): kotlin/Any // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.model.<get-model>|<get-model>(){}[0]
        final val spanStyle // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.spanStyle|{}spanStyle[0]
            final fun <get-spanStyle>(): kotlin/Function1<com.mohamedrejeb.richeditor.model/RichTextConfig, androidx.compose.ui.text/SpanStyle> // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.spanStyle.<get-spanStyle>|<get-spanStyle>(){}[0]

        final var height // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.height|{}height[0]
            final fun <get-height>(): androidx.compose.ui.unit/TextUnit // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.height.<get-height>|<get-height>(){}[0]
        final var width // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.width|{}width[0]
            final fun <get-width>(): androidx.compose.ui.unit/TextUnit // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.width.<get-width>|<get-width>(){}[0]

        final fun (androidx.compose.ui.graphics.drawscope/DrawScope).drawCustomStyle(androidx.compose.ui.text/TextLayoutResult, androidx.compose.ui.text/TextRange, com.mohamedrejeb.richeditor.model/RichTextConfig, kotlin/Float, kotlin/Float) // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.drawCustomStyle|drawCustomStyle@androidx.compose.ui.graphics.drawscope.DrawScope(androidx.compose.ui.text.TextLayoutResult;androidx.compose.ui.text.TextRange;com.mohamedrejeb.richeditor.model.RichTextConfig;kotlin.Float;kotlin.Float){}[0]
        final fun (androidx.compose.ui.text/AnnotatedString.Builder).appendCustomContent(com.mohamedrejeb.richeditor.model/RichTextState): androidx.compose.ui.text/AnnotatedString.Builder // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.appendCustomContent|appendCustomContent@androidx.compose.ui.text.AnnotatedString.Builder(com.mohamedrejeb.richeditor.model.RichTextState){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // com.mohamedrejeb.richeditor.model/RichSpanStyle.Image.hashCode|hashCode(){}[0]
    }

    final class Link : com.mohamedrejeb.richeditor.model/RichSpanStyle { // com.mohamedrejeb.richeditor.model/RichSpanStyle.Link|null[0]
        constructor <init>(kotlin/String) // com.mohamedrejeb.richeditor.model/RichSpanStyle.Link.<init>|<init>(kotlin.String){}[0]

        final val acceptNewTextInTheEdges // com.mohamedrejeb.richeditor.model/RichSpanStyle.Link.acceptNewTextInTheEdges|{}acceptNewTextInTheEdges[0]
            final fun <get-acceptNewTextInTheEdges>(): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichSpanStyle.Link.acceptNewTextInTheEdges.<get-acceptNewTextInTheEdges>|<get-acceptNewTextInTheEdges>(){}[0]
        final val spanStyle // com.mohamedrejeb.richeditor.model/RichSpanStyle.Link.spanStyle|{}spanStyle[0]
            final fun <get-spanStyle>(): kotlin/Function1<com.mohamedrejeb.richeditor.model/RichTextConfig, androidx.compose.ui.text/SpanStyle> // com.mohamedrejeb.richeditor.model/RichSpanStyle.Link.spanStyle.<get-spanStyle>|<get-spanStyle>(){}[0]
        final val url // com.mohamedrejeb.richeditor.model/RichSpanStyle.Link.url|{}url[0]
            final fun <get-url>(): kotlin/String // com.mohamedrejeb.richeditor.model/RichSpanStyle.Link.url.<get-url>|<get-url>(){}[0]

        final fun (androidx.compose.ui.graphics.drawscope/DrawScope).drawCustomStyle(androidx.compose.ui.text/TextLayoutResult, androidx.compose.ui.text/TextRange, com.mohamedrejeb.richeditor.model/RichTextConfig, kotlin/Float, kotlin/Float) // com.mohamedrejeb.richeditor.model/RichSpanStyle.Link.drawCustomStyle|drawCustomStyle@androidx.compose.ui.graphics.drawscope.DrawScope(androidx.compose.ui.text.TextLayoutResult;androidx.compose.ui.text.TextRange;com.mohamedrejeb.richeditor.model.RichTextConfig;kotlin.Float;kotlin.Float){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichSpanStyle.Link.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // com.mohamedrejeb.richeditor.model/RichSpanStyle.Link.hashCode|hashCode(){}[0]
    }

    final object Companion // com.mohamedrejeb.richeditor.model/RichSpanStyle.Companion|null[0]

    final object Default : com.mohamedrejeb.richeditor.model/RichSpanStyle { // com.mohamedrejeb.richeditor.model/RichSpanStyle.Default|null[0]
        final val acceptNewTextInTheEdges // com.mohamedrejeb.richeditor.model/RichSpanStyle.Default.acceptNewTextInTheEdges|{}acceptNewTextInTheEdges[0]
            final fun <get-acceptNewTextInTheEdges>(): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichSpanStyle.Default.acceptNewTextInTheEdges.<get-acceptNewTextInTheEdges>|<get-acceptNewTextInTheEdges>(){}[0]
        final val spanStyle // com.mohamedrejeb.richeditor.model/RichSpanStyle.Default.spanStyle|{}spanStyle[0]
            final fun <get-spanStyle>(): kotlin/Function1<com.mohamedrejeb.richeditor.model/RichTextConfig, androidx.compose.ui.text/SpanStyle> // com.mohamedrejeb.richeditor.model/RichSpanStyle.Default.spanStyle.<get-spanStyle>|<get-spanStyle>(){}[0]

        final fun (androidx.compose.ui.graphics.drawscope/DrawScope).drawCustomStyle(androidx.compose.ui.text/TextLayoutResult, androidx.compose.ui.text/TextRange, com.mohamedrejeb.richeditor.model/RichTextConfig, kotlin/Float, kotlin/Float) // com.mohamedrejeb.richeditor.model/RichSpanStyle.Default.drawCustomStyle|drawCustomStyle@androidx.compose.ui.graphics.drawscope.DrawScope(androidx.compose.ui.text.TextLayoutResult;androidx.compose.ui.text.TextRange;com.mohamedrejeb.richeditor.model.RichTextConfig;kotlin.Float;kotlin.Float){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichSpanStyle.Default.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // com.mohamedrejeb.richeditor.model/RichSpanStyle.Default.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // com.mohamedrejeb.richeditor.model/RichSpanStyle.Default.toString|toString(){}[0]
    }
}

abstract interface com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType { // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType|null[0]
    open fun format(kotlin/Int, kotlin/Int): kotlin/String // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.format|format(kotlin.Int;kotlin.Int){}[0]
    open fun getSuffix(kotlin/Int): kotlin/String // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.getSuffix|getSuffix(kotlin.Int){}[0]

    final class Multiple : com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType { // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.Multiple|null[0]
        constructor <init>(kotlin/Array<out com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType>...) // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.Multiple.<init>|<init>(kotlin.Array<out|com.mohamedrejeb.richeditor.paragraph.type.OrderedListStyleType>...){}[0]

        final val styles // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.Multiple.styles|{}styles[0]
            final fun <get-styles>(): kotlin/Array<out com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType> // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.Multiple.styles.<get-styles>|<get-styles>(){}[0]

        final fun format(kotlin/Int, kotlin/Int): kotlin/String // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.Multiple.format|format(kotlin.Int;kotlin.Int){}[0]
        final fun getSuffix(kotlin/Int): kotlin/String // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.Multiple.getSuffix|getSuffix(kotlin.Int){}[0]
    }

    final object Arabic : com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType { // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.Arabic|null[0]
        final fun format(kotlin/Int, kotlin/Int): kotlin/String // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.Arabic.format|format(kotlin.Int;kotlin.Int){}[0]
    }

    final object ArabicIndic : com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType { // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.ArabicIndic|null[0]
        final fun format(kotlin/Int, kotlin/Int): kotlin/String // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.ArabicIndic.format|format(kotlin.Int;kotlin.Int){}[0]
    }

    final object Decimal : com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType { // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.Decimal|null[0]
        final fun format(kotlin/Int, kotlin/Int): kotlin/String // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.Decimal.format|format(kotlin.Int;kotlin.Int){}[0]
    }

    final object LowerAlpha : com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType { // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.LowerAlpha|null[0]
        final fun format(kotlin/Int, kotlin/Int): kotlin/String // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.LowerAlpha.format|format(kotlin.Int;kotlin.Int){}[0]
    }

    final object LowerRoman : com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType { // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.LowerRoman|null[0]
        final fun format(kotlin/Int, kotlin/Int): kotlin/String // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.LowerRoman.format|format(kotlin.Int;kotlin.Int){}[0]
    }

    final object UpperAlpha : com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType { // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.UpperAlpha|null[0]
        final fun format(kotlin/Int, kotlin/Int): kotlin/String // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.UpperAlpha.format|format(kotlin.Int;kotlin.Int){}[0]
    }

    final object UpperRoman : com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType { // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.UpperRoman|null[0]
        final fun format(kotlin/Int, kotlin/Int): kotlin/String // com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType.UpperRoman.format|format(kotlin.Int;kotlin.Int){}[0]
    }
}

final class com.mohamedrejeb.richeditor.model/ImageData { // com.mohamedrejeb.richeditor.model/ImageData|null[0]
    constructor <init>(androidx.compose.ui.graphics.painter/Painter, kotlin/String? = ..., androidx.compose.ui/Alignment = ..., androidx.compose.ui.layout/ContentScale = ..., androidx.compose.ui/Modifier = ...) // com.mohamedrejeb.richeditor.model/ImageData.<init>|<init>(androidx.compose.ui.graphics.painter.Painter;kotlin.String?;androidx.compose.ui.Alignment;androidx.compose.ui.layout.ContentScale;androidx.compose.ui.Modifier){}[0]

    final val alignment // com.mohamedrejeb.richeditor.model/ImageData.alignment|{}alignment[0]
        final fun <get-alignment>(): androidx.compose.ui/Alignment // com.mohamedrejeb.richeditor.model/ImageData.alignment.<get-alignment>|<get-alignment>(){}[0]
    final val contentDescription // com.mohamedrejeb.richeditor.model/ImageData.contentDescription|{}contentDescription[0]
        final fun <get-contentDescription>(): kotlin/String? // com.mohamedrejeb.richeditor.model/ImageData.contentDescription.<get-contentDescription>|<get-contentDescription>(){}[0]
    final val contentScale // com.mohamedrejeb.richeditor.model/ImageData.contentScale|{}contentScale[0]
        final fun <get-contentScale>(): androidx.compose.ui.layout/ContentScale // com.mohamedrejeb.richeditor.model/ImageData.contentScale.<get-contentScale>|<get-contentScale>(){}[0]
    final val modifier // com.mohamedrejeb.richeditor.model/ImageData.modifier|{}modifier[0]
        final fun <get-modifier>(): androidx.compose.ui/Modifier // com.mohamedrejeb.richeditor.model/ImageData.modifier.<get-modifier>|<get-modifier>(){}[0]
    final val painter // com.mohamedrejeb.richeditor.model/ImageData.painter|{}painter[0]
        final fun <get-painter>(): androidx.compose.ui.graphics.painter/Painter // com.mohamedrejeb.richeditor.model/ImageData.painter.<get-painter>|<get-painter>(){}[0]
}

final class com.mohamedrejeb.richeditor.model/RichTextConfig { // com.mohamedrejeb.richeditor.model/RichTextConfig|null[0]
    final var codeSpanBackgroundColor // com.mohamedrejeb.richeditor.model/RichTextConfig.codeSpanBackgroundColor|{}codeSpanBackgroundColor[0]
        final fun <get-codeSpanBackgroundColor>(): androidx.compose.ui.graphics/Color // com.mohamedrejeb.richeditor.model/RichTextConfig.codeSpanBackgroundColor.<get-codeSpanBackgroundColor>|<get-codeSpanBackgroundColor>(){}[0]
        final fun <set-codeSpanBackgroundColor>(androidx.compose.ui.graphics/Color) // com.mohamedrejeb.richeditor.model/RichTextConfig.codeSpanBackgroundColor.<set-codeSpanBackgroundColor>|<set-codeSpanBackgroundColor>(androidx.compose.ui.graphics.Color){}[0]
    final var codeSpanColor // com.mohamedrejeb.richeditor.model/RichTextConfig.codeSpanColor|{}codeSpanColor[0]
        final fun <get-codeSpanColor>(): androidx.compose.ui.graphics/Color // com.mohamedrejeb.richeditor.model/RichTextConfig.codeSpanColor.<get-codeSpanColor>|<get-codeSpanColor>(){}[0]
        final fun <set-codeSpanColor>(androidx.compose.ui.graphics/Color) // com.mohamedrejeb.richeditor.model/RichTextConfig.codeSpanColor.<set-codeSpanColor>|<set-codeSpanColor>(androidx.compose.ui.graphics.Color){}[0]
    final var codeSpanStrokeColor // com.mohamedrejeb.richeditor.model/RichTextConfig.codeSpanStrokeColor|{}codeSpanStrokeColor[0]
        final fun <get-codeSpanStrokeColor>(): androidx.compose.ui.graphics/Color // com.mohamedrejeb.richeditor.model/RichTextConfig.codeSpanStrokeColor.<get-codeSpanStrokeColor>|<get-codeSpanStrokeColor>(){}[0]
        final fun <set-codeSpanStrokeColor>(androidx.compose.ui.graphics/Color) // com.mohamedrejeb.richeditor.model/RichTextConfig.codeSpanStrokeColor.<set-codeSpanStrokeColor>|<set-codeSpanStrokeColor>(androidx.compose.ui.graphics.Color){}[0]
    final var exitListOnEmptyItem // com.mohamedrejeb.richeditor.model/RichTextConfig.exitListOnEmptyItem|{}exitListOnEmptyItem[0]
        final fun <get-exitListOnEmptyItem>(): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichTextConfig.exitListOnEmptyItem.<get-exitListOnEmptyItem>|<get-exitListOnEmptyItem>(){}[0]
        final fun <set-exitListOnEmptyItem>(kotlin/Boolean) // com.mohamedrejeb.richeditor.model/RichTextConfig.exitListOnEmptyItem.<set-exitListOnEmptyItem>|<set-exitListOnEmptyItem>(kotlin.Boolean){}[0]
    final var linkColor // com.mohamedrejeb.richeditor.model/RichTextConfig.linkColor|{}linkColor[0]
        final fun <get-linkColor>(): androidx.compose.ui.graphics/Color // com.mohamedrejeb.richeditor.model/RichTextConfig.linkColor.<get-linkColor>|<get-linkColor>(){}[0]
        final fun <set-linkColor>(androidx.compose.ui.graphics/Color) // com.mohamedrejeb.richeditor.model/RichTextConfig.linkColor.<set-linkColor>|<set-linkColor>(androidx.compose.ui.graphics.Color){}[0]
    final var linkTextDecoration // com.mohamedrejeb.richeditor.model/RichTextConfig.linkTextDecoration|{}linkTextDecoration[0]
        final fun <get-linkTextDecoration>(): androidx.compose.ui.text.style/TextDecoration // com.mohamedrejeb.richeditor.model/RichTextConfig.linkTextDecoration.<get-linkTextDecoration>|<get-linkTextDecoration>(){}[0]
        final fun <set-linkTextDecoration>(androidx.compose.ui.text.style/TextDecoration) // com.mohamedrejeb.richeditor.model/RichTextConfig.linkTextDecoration.<set-linkTextDecoration>|<set-linkTextDecoration>(androidx.compose.ui.text.style.TextDecoration){}[0]
    final var listIndent // com.mohamedrejeb.richeditor.model/RichTextConfig.listIndent|{}listIndent[0]
        final fun <get-listIndent>(): kotlin/Int // com.mohamedrejeb.richeditor.model/RichTextConfig.listIndent.<get-listIndent>|<get-listIndent>(){}[0]
        final fun <set-listIndent>(kotlin/Int) // com.mohamedrejeb.richeditor.model/RichTextConfig.listIndent.<set-listIndent>|<set-listIndent>(kotlin.Int){}[0]
    final var orderedListIndent // com.mohamedrejeb.richeditor.model/RichTextConfig.orderedListIndent|{}orderedListIndent[0]
        final fun <get-orderedListIndent>(): kotlin/Int // com.mohamedrejeb.richeditor.model/RichTextConfig.orderedListIndent.<get-orderedListIndent>|<get-orderedListIndent>(){}[0]
        final fun <set-orderedListIndent>(kotlin/Int) // com.mohamedrejeb.richeditor.model/RichTextConfig.orderedListIndent.<set-orderedListIndent>|<set-orderedListIndent>(kotlin.Int){}[0]
    final var orderedListStyleType // com.mohamedrejeb.richeditor.model/RichTextConfig.orderedListStyleType|{}orderedListStyleType[0]
        final fun <get-orderedListStyleType>(): com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType // com.mohamedrejeb.richeditor.model/RichTextConfig.orderedListStyleType.<get-orderedListStyleType>|<get-orderedListStyleType>(){}[0]
        final fun <set-orderedListStyleType>(com.mohamedrejeb.richeditor.paragraph.type/OrderedListStyleType) // com.mohamedrejeb.richeditor.model/RichTextConfig.orderedListStyleType.<set-orderedListStyleType>|<set-orderedListStyleType>(com.mohamedrejeb.richeditor.paragraph.type.OrderedListStyleType){}[0]
    final var preserveStyleOnEmptyLine // com.mohamedrejeb.richeditor.model/RichTextConfig.preserveStyleOnEmptyLine|{}preserveStyleOnEmptyLine[0]
        final fun <get-preserveStyleOnEmptyLine>(): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichTextConfig.preserveStyleOnEmptyLine.<get-preserveStyleOnEmptyLine>|<get-preserveStyleOnEmptyLine>(){}[0]
        final fun <set-preserveStyleOnEmptyLine>(kotlin/Boolean) // com.mohamedrejeb.richeditor.model/RichTextConfig.preserveStyleOnEmptyLine.<set-preserveStyleOnEmptyLine>|<set-preserveStyleOnEmptyLine>(kotlin.Boolean){}[0]
    final var unorderedListIndent // com.mohamedrejeb.richeditor.model/RichTextConfig.unorderedListIndent|{}unorderedListIndent[0]
        final fun <get-unorderedListIndent>(): kotlin/Int // com.mohamedrejeb.richeditor.model/RichTextConfig.unorderedListIndent.<get-unorderedListIndent>|<get-unorderedListIndent>(){}[0]
        final fun <set-unorderedListIndent>(kotlin/Int) // com.mohamedrejeb.richeditor.model/RichTextConfig.unorderedListIndent.<set-unorderedListIndent>|<set-unorderedListIndent>(kotlin.Int){}[0]
    final var unorderedListStyleType // com.mohamedrejeb.richeditor.model/RichTextConfig.unorderedListStyleType|{}unorderedListStyleType[0]
        final fun <get-unorderedListStyleType>(): com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType // com.mohamedrejeb.richeditor.model/RichTextConfig.unorderedListStyleType.<get-unorderedListStyleType>|<get-unorderedListStyleType>(){}[0]
        final fun <set-unorderedListStyleType>(com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType) // com.mohamedrejeb.richeditor.model/RichTextConfig.unorderedListStyleType.<set-unorderedListStyleType>|<set-unorderedListStyleType>(com.mohamedrejeb.richeditor.paragraph.type.UnorderedListStyleType){}[0]
}

final class com.mohamedrejeb.richeditor.model/RichTextState { // com.mohamedrejeb.richeditor.model/RichTextState|null[0]
    constructor <init>() // com.mohamedrejeb.richeditor.model/RichTextState.<init>|<init>(){}[0]

    final val composition // com.mohamedrejeb.richeditor.model/RichTextState.composition|{}composition[0]
        final fun <get-composition>(): androidx.compose.ui.text/TextRange? // com.mohamedrejeb.richeditor.model/RichTextState.composition.<get-composition>|<get-composition>(){}[0]
    final val config // com.mohamedrejeb.richeditor.model/RichTextState.config|{}config[0]
        final fun <get-config>(): com.mohamedrejeb.richeditor.model/RichTextConfig // com.mohamedrejeb.richeditor.model/RichTextState.config.<get-config>|<get-config>(){}[0]
    final val currentParagraphStyle // com.mohamedrejeb.richeditor.model/RichTextState.currentParagraphStyle|{}currentParagraphStyle[0]
        final fun <get-currentParagraphStyle>(): androidx.compose.ui.text/ParagraphStyle // com.mohamedrejeb.richeditor.model/RichTextState.currentParagraphStyle.<get-currentParagraphStyle>|<get-currentParagraphStyle>(){}[0]
    final val currentRichSpanStyle // com.mohamedrejeb.richeditor.model/RichTextState.currentRichSpanStyle|{}currentRichSpanStyle[0]
        final fun <get-currentRichSpanStyle>(): com.mohamedrejeb.richeditor.model/RichSpanStyle // com.mohamedrejeb.richeditor.model/RichTextState.currentRichSpanStyle.<get-currentRichSpanStyle>|<get-currentRichSpanStyle>(){}[0]
    final val currentSpanStyle // com.mohamedrejeb.richeditor.model/RichTextState.currentSpanStyle|{}currentSpanStyle[0]
        final fun <get-currentSpanStyle>(): androidx.compose.ui.text/SpanStyle // com.mohamedrejeb.richeditor.model/RichTextState.currentSpanStyle.<get-currentSpanStyle>|<get-currentSpanStyle>(){}[0]
    final val isCode // com.mohamedrejeb.richeditor.model/RichTextState.isCode|{}isCode[0]
        final fun <get-isCode>(): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichTextState.isCode.<get-isCode>|<get-isCode>(){}[0]
    final val isCodeSpan // com.mohamedrejeb.richeditor.model/RichTextState.isCodeSpan|{}isCodeSpan[0]
        final fun <get-isCodeSpan>(): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichTextState.isCodeSpan.<get-isCodeSpan>|<get-isCodeSpan>(){}[0]
    final val isLink // com.mohamedrejeb.richeditor.model/RichTextState.isLink|{}isLink[0]
        final fun <get-isLink>(): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichTextState.isLink.<get-isLink>|<get-isLink>(){}[0]
    final val selectedLinkText // com.mohamedrejeb.richeditor.model/RichTextState.selectedLinkText|{}selectedLinkText[0]
        final fun <get-selectedLinkText>(): kotlin/String? // com.mohamedrejeb.richeditor.model/RichTextState.selectedLinkText.<get-selectedLinkText>|<get-selectedLinkText>(){}[0]
    final val selectedLinkUrl // com.mohamedrejeb.richeditor.model/RichTextState.selectedLinkUrl|{}selectedLinkUrl[0]
        final fun <get-selectedLinkUrl>(): kotlin/String? // com.mohamedrejeb.richeditor.model/RichTextState.selectedLinkUrl.<get-selectedLinkUrl>|<get-selectedLinkUrl>(){}[0]

    final var annotatedString // com.mohamedrejeb.richeditor.model/RichTextState.annotatedString|{}annotatedString[0]
        final fun <get-annotatedString>(): androidx.compose.ui.text/AnnotatedString // com.mohamedrejeb.richeditor.model/RichTextState.annotatedString.<get-annotatedString>|<get-annotatedString>(){}[0]
    final var canDecreaseListLevel // com.mohamedrejeb.richeditor.model/RichTextState.canDecreaseListLevel|{}canDecreaseListLevel[0]
        final fun <get-canDecreaseListLevel>(): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichTextState.canDecreaseListLevel.<get-canDecreaseListLevel>|<get-canDecreaseListLevel>(){}[0]
    final var canIncreaseListLevel // com.mohamedrejeb.richeditor.model/RichTextState.canIncreaseListLevel|{}canIncreaseListLevel[0]
        final fun <get-canIncreaseListLevel>(): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichTextState.canIncreaseListLevel.<get-canIncreaseListLevel>|<get-canIncreaseListLevel>(){}[0]
    final var isList // com.mohamedrejeb.richeditor.model/RichTextState.isList|{}isList[0]
        final fun <get-isList>(): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichTextState.isList.<get-isList>|<get-isList>(){}[0]
    final var isOrderedList // com.mohamedrejeb.richeditor.model/RichTextState.isOrderedList|{}isOrderedList[0]
        final fun <get-isOrderedList>(): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichTextState.isOrderedList.<get-isOrderedList>|<get-isOrderedList>(){}[0]
    final var isUnorderedList // com.mohamedrejeb.richeditor.model/RichTextState.isUnorderedList|{}isUnorderedList[0]
        final fun <get-isUnorderedList>(): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichTextState.isUnorderedList.<get-isUnorderedList>|<get-isUnorderedList>(){}[0]
    final var selection // com.mohamedrejeb.richeditor.model/RichTextState.selection|{}selection[0]
        final fun <get-selection>(): androidx.compose.ui.text/TextRange // com.mohamedrejeb.richeditor.model/RichTextState.selection.<get-selection>|<get-selection>(){}[0]
        final fun <set-selection>(androidx.compose.ui.text/TextRange) // com.mohamedrejeb.richeditor.model/RichTextState.selection.<set-selection>|<set-selection>(androidx.compose.ui.text.TextRange){}[0]

    final fun addCode() // com.mohamedrejeb.richeditor.model/RichTextState.addCode|addCode(){}[0]
    final fun addCodeSpan() // com.mohamedrejeb.richeditor.model/RichTextState.addCodeSpan|addCodeSpan(){}[0]
    final fun addLink(kotlin/String, kotlin/String) // com.mohamedrejeb.richeditor.model/RichTextState.addLink|addLink(kotlin.String;kotlin.String){}[0]
    final fun addLinkToSelection(kotlin/String) // com.mohamedrejeb.richeditor.model/RichTextState.addLinkToSelection|addLinkToSelection(kotlin.String){}[0]
    final fun addLinkToTextRange(kotlin/String, androidx.compose.ui.text/TextRange) // com.mohamedrejeb.richeditor.model/RichTextState.addLinkToTextRange|addLinkToTextRange(kotlin.String;androidx.compose.ui.text.TextRange){}[0]
    final fun addOrderedList() // com.mohamedrejeb.richeditor.model/RichTextState.addOrderedList|addOrderedList(){}[0]
    final fun addParagraphStyle(androidx.compose.ui.text/ParagraphStyle) // com.mohamedrejeb.richeditor.model/RichTextState.addParagraphStyle|addParagraphStyle(androidx.compose.ui.text.ParagraphStyle){}[0]
    final fun addRichSpan(com.mohamedrejeb.richeditor.model/RichSpanStyle) // com.mohamedrejeb.richeditor.model/RichTextState.addRichSpan|addRichSpan(com.mohamedrejeb.richeditor.model.RichSpanStyle){}[0]
    final fun addRichSpan(com.mohamedrejeb.richeditor.model/RichSpanStyle, androidx.compose.ui.text/TextRange) // com.mohamedrejeb.richeditor.model/RichTextState.addRichSpan|addRichSpan(com.mohamedrejeb.richeditor.model.RichSpanStyle;androidx.compose.ui.text.TextRange){}[0]
    final fun addSpanStyle(androidx.compose.ui.text/SpanStyle) // com.mohamedrejeb.richeditor.model/RichTextState.addSpanStyle|addSpanStyle(androidx.compose.ui.text.SpanStyle){}[0]
    final fun addSpanStyle(androidx.compose.ui.text/SpanStyle, androidx.compose.ui.text/TextRange) // com.mohamedrejeb.richeditor.model/RichTextState.addSpanStyle|addSpanStyle(androidx.compose.ui.text.SpanStyle;androidx.compose.ui.text.TextRange){}[0]
    final fun addTextAfterSelection(kotlin/String) // com.mohamedrejeb.richeditor.model/RichTextState.addTextAfterSelection|addTextAfterSelection(kotlin.String){}[0]
    final fun addTextAtIndex(kotlin/Int, kotlin/String) // com.mohamedrejeb.richeditor.model/RichTextState.addTextAtIndex|addTextAtIndex(kotlin.Int;kotlin.String){}[0]
    final fun addUnorderedList() // com.mohamedrejeb.richeditor.model/RichTextState.addUnorderedList|addUnorderedList(){}[0]
    final fun clear() // com.mohamedrejeb.richeditor.model/RichTextState.clear|clear(){}[0]
    final fun clearRichSpans() // com.mohamedrejeb.richeditor.model/RichTextState.clearRichSpans|clearRichSpans(){}[0]
    final fun clearRichSpans(androidx.compose.ui.text/TextRange) // com.mohamedrejeb.richeditor.model/RichTextState.clearRichSpans|clearRichSpans(androidx.compose.ui.text.TextRange){}[0]
    final fun clearSpanStyles() // com.mohamedrejeb.richeditor.model/RichTextState.clearSpanStyles|clearSpanStyles(){}[0]
    final fun clearSpanStyles(androidx.compose.ui.text/TextRange) // com.mohamedrejeb.richeditor.model/RichTextState.clearSpanStyles|clearSpanStyles(androidx.compose.ui.text.TextRange){}[0]
    final fun copy(): com.mohamedrejeb.richeditor.model/RichTextState // com.mohamedrejeb.richeditor.model/RichTextState.copy|copy(){}[0]
    final fun decreaseListLevel() // com.mohamedrejeb.richeditor.model/RichTextState.decreaseListLevel|decreaseListLevel(){}[0]
    final fun getParagraphStyle(androidx.compose.ui.text/TextRange): androidx.compose.ui.text/ParagraphStyle // com.mohamedrejeb.richeditor.model/RichTextState.getParagraphStyle|getParagraphStyle(androidx.compose.ui.text.TextRange){}[0]
    final fun getRichSpanStyle(androidx.compose.ui.text/TextRange): com.mohamedrejeb.richeditor.model/RichSpanStyle // com.mohamedrejeb.richeditor.model/RichTextState.getRichSpanStyle|getRichSpanStyle(androidx.compose.ui.text.TextRange){}[0]
    final fun getSpanStyle(androidx.compose.ui.text/TextRange): androidx.compose.ui.text/SpanStyle // com.mohamedrejeb.richeditor.model/RichTextState.getSpanStyle|getSpanStyle(androidx.compose.ui.text.TextRange){}[0]
    final fun increaseListLevel() // com.mohamedrejeb.richeditor.model/RichTextState.increaseListLevel|increaseListLevel(){}[0]
    final fun insertHtml(kotlin/String, kotlin/Int) // com.mohamedrejeb.richeditor.model/RichTextState.insertHtml|insertHtml(kotlin.String;kotlin.Int){}[0]
    final fun insertHtmlAfterSelection(kotlin/String) // com.mohamedrejeb.richeditor.model/RichTextState.insertHtmlAfterSelection|insertHtmlAfterSelection(kotlin.String){}[0]
    final fun insertMarkdown(kotlin/String, kotlin/Int) // com.mohamedrejeb.richeditor.model/RichTextState.insertMarkdown|insertMarkdown(kotlin.String;kotlin.Int){}[0]
    final fun insertMarkdownAfterSelection(kotlin/String) // com.mohamedrejeb.richeditor.model/RichTextState.insertMarkdownAfterSelection|insertMarkdownAfterSelection(kotlin.String){}[0]
    final fun isRichSpan(com.mohamedrejeb.richeditor.model/RichSpanStyle): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichTextState.isRichSpan|isRichSpan(com.mohamedrejeb.richeditor.model.RichSpanStyle){}[0]
    final fun isRichSpan(kotlin.reflect/KClass<out com.mohamedrejeb.richeditor.model/RichSpanStyle>): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichTextState.isRichSpan|isRichSpan(kotlin.reflect.KClass<out|com.mohamedrejeb.richeditor.model.RichSpanStyle>){}[0]
    final fun removeCode() // com.mohamedrejeb.richeditor.model/RichTextState.removeCode|removeCode(){}[0]
    final fun removeCodeSpan() // com.mohamedrejeb.richeditor.model/RichTextState.removeCodeSpan|removeCodeSpan(){}[0]
    final fun removeLink() // com.mohamedrejeb.richeditor.model/RichTextState.removeLink|removeLink(){}[0]
    final fun removeOrderedList() // com.mohamedrejeb.richeditor.model/RichTextState.removeOrderedList|removeOrderedList(){}[0]
    final fun removeParagraphStyle(androidx.compose.ui.text/ParagraphStyle) // com.mohamedrejeb.richeditor.model/RichTextState.removeParagraphStyle|removeParagraphStyle(androidx.compose.ui.text.ParagraphStyle){}[0]
    final fun removeRichSpan(com.mohamedrejeb.richeditor.model/RichSpanStyle) // com.mohamedrejeb.richeditor.model/RichTextState.removeRichSpan|removeRichSpan(com.mohamedrejeb.richeditor.model.RichSpanStyle){}[0]
    final fun removeRichSpan(com.mohamedrejeb.richeditor.model/RichSpanStyle, androidx.compose.ui.text/TextRange) // com.mohamedrejeb.richeditor.model/RichTextState.removeRichSpan|removeRichSpan(com.mohamedrejeb.richeditor.model.RichSpanStyle;androidx.compose.ui.text.TextRange){}[0]
    final fun removeSelectedText() // com.mohamedrejeb.richeditor.model/RichTextState.removeSelectedText|removeSelectedText(){}[0]
    final fun removeSpanStyle(androidx.compose.ui.text/SpanStyle) // com.mohamedrejeb.richeditor.model/RichTextState.removeSpanStyle|removeSpanStyle(androidx.compose.ui.text.SpanStyle){}[0]
    final fun removeSpanStyle(androidx.compose.ui.text/SpanStyle, androidx.compose.ui.text/TextRange) // com.mohamedrejeb.richeditor.model/RichTextState.removeSpanStyle|removeSpanStyle(androidx.compose.ui.text.SpanStyle;androidx.compose.ui.text.TextRange){}[0]
    final fun removeTextRange(androidx.compose.ui.text/TextRange) // com.mohamedrejeb.richeditor.model/RichTextState.removeTextRange|removeTextRange(androidx.compose.ui.text.TextRange){}[0]
    final fun removeUnorderedList() // com.mohamedrejeb.richeditor.model/RichTextState.removeUnorderedList|removeUnorderedList(){}[0]
    final fun replaceSelectedText(kotlin/String) // com.mohamedrejeb.richeditor.model/RichTextState.replaceSelectedText|replaceSelectedText(kotlin.String){}[0]
    final fun replaceTextRange(androidx.compose.ui.text/TextRange, kotlin/String) // com.mohamedrejeb.richeditor.model/RichTextState.replaceTextRange|replaceTextRange(androidx.compose.ui.text.TextRange;kotlin.String){}[0]
    final fun setConfig(androidx.compose.ui.graphics/Color = ..., androidx.compose.ui.text.style/TextDecoration? = ..., androidx.compose.ui.graphics/Color = ..., androidx.compose.ui.graphics/Color = ..., androidx.compose.ui.graphics/Color = ..., kotlin/Int = ...) // com.mohamedrejeb.richeditor.model/RichTextState.setConfig|setConfig(androidx.compose.ui.graphics.Color;androidx.compose.ui.text.style.TextDecoration?;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;kotlin.Int){}[0]
    final fun setHtml(kotlin/String): com.mohamedrejeb.richeditor.model/RichTextState // com.mohamedrejeb.richeditor.model/RichTextState.setHtml|setHtml(kotlin.String){}[0]
    final fun setMarkdown(kotlin/String): com.mohamedrejeb.richeditor.model/RichTextState // com.mohamedrejeb.richeditor.model/RichTextState.setMarkdown|setMarkdown(kotlin.String){}[0]
    final fun setText(kotlin/String): com.mohamedrejeb.richeditor.model/RichTextState // com.mohamedrejeb.richeditor.model/RichTextState.setText|setText(kotlin.String){}[0]
    final fun toHtml(): kotlin/String // com.mohamedrejeb.richeditor.model/RichTextState.toHtml|toHtml(){}[0]
    final fun toMarkdown(): kotlin/String // com.mohamedrejeb.richeditor.model/RichTextState.toMarkdown|toMarkdown(){}[0]
    final fun toText(): kotlin/String // com.mohamedrejeb.richeditor.model/RichTextState.toText|toText(){}[0]
    final fun toggleCode() // com.mohamedrejeb.richeditor.model/RichTextState.toggleCode|toggleCode(){}[0]
    final fun toggleCodeSpan() // com.mohamedrejeb.richeditor.model/RichTextState.toggleCodeSpan|toggleCodeSpan(){}[0]
    final fun toggleOrderedList() // com.mohamedrejeb.richeditor.model/RichTextState.toggleOrderedList|toggleOrderedList(){}[0]
    final fun toggleParagraphStyle(androidx.compose.ui.text/ParagraphStyle) // com.mohamedrejeb.richeditor.model/RichTextState.toggleParagraphStyle|toggleParagraphStyle(androidx.compose.ui.text.ParagraphStyle){}[0]
    final fun toggleRichSpan(com.mohamedrejeb.richeditor.model/RichSpanStyle) // com.mohamedrejeb.richeditor.model/RichTextState.toggleRichSpan|toggleRichSpan(com.mohamedrejeb.richeditor.model.RichSpanStyle){}[0]
    final fun toggleSpanStyle(androidx.compose.ui.text/SpanStyle) // com.mohamedrejeb.richeditor.model/RichTextState.toggleSpanStyle|toggleSpanStyle(androidx.compose.ui.text.SpanStyle){}[0]
    final fun toggleUnorderedList() // com.mohamedrejeb.richeditor.model/RichTextState.toggleUnorderedList|toggleUnorderedList(){}[0]
    final fun updateLink(kotlin/String) // com.mohamedrejeb.richeditor.model/RichTextState.updateLink|updateLink(kotlin.String){}[0]
    final inline fun <#A1: reified com.mohamedrejeb.richeditor.model/RichSpanStyle> isRichSpan(): kotlin/Boolean // com.mohamedrejeb.richeditor.model/RichTextState.isRichSpan|isRichSpan(){0§<com.mohamedrejeb.richeditor.model.RichSpanStyle>}[0]

    final object Companion { // com.mohamedrejeb.richeditor.model/RichTextState.Companion|null[0]
        final val Saver // com.mohamedrejeb.richeditor.model/RichTextState.Companion.Saver|{}Saver[0]
            final fun <get-Saver>(): androidx.compose.runtime.saveable/Saver<com.mohamedrejeb.richeditor.model/RichTextState, *> // com.mohamedrejeb.richeditor.model/RichTextState.Companion.Saver.<get-Saver>|<get-Saver>(){}[0]
    }
}

final class com.mohamedrejeb.richeditor.model/TextPaddingValues { // com.mohamedrejeb.richeditor.model/TextPaddingValues|null[0]
    constructor <init>(androidx.compose.ui.unit/TextUnit = ..., androidx.compose.ui.unit/TextUnit = ...) // com.mohamedrejeb.richeditor.model/TextPaddingValues.<init>|<init>(androidx.compose.ui.unit.TextUnit;androidx.compose.ui.unit.TextUnit){}[0]

    final val horizontal // com.mohamedrejeb.richeditor.model/TextPaddingValues.horizontal|{}horizontal[0]
        final fun <get-horizontal>(): androidx.compose.ui.unit/TextUnit // com.mohamedrejeb.richeditor.model/TextPaddingValues.horizontal.<get-horizontal>|<get-horizontal>(){}[0]
    final val vertical // com.mohamedrejeb.richeditor.model/TextPaddingValues.vertical|{}vertical[0]
        final fun <get-vertical>(): androidx.compose.ui.unit/TextUnit // com.mohamedrejeb.richeditor.model/TextPaddingValues.vertical.<get-vertical>|<get-vertical>(){}[0]

    final fun component1(): androidx.compose.ui.unit/TextUnit // com.mohamedrejeb.richeditor.model/TextPaddingValues.component1|component1(){}[0]
    final fun component2(): androidx.compose.ui.unit/TextUnit // com.mohamedrejeb.richeditor.model/TextPaddingValues.component2|component2(){}[0]
    final fun copy(androidx.compose.ui.unit/TextUnit = ..., androidx.compose.ui.unit/TextUnit = ...): com.mohamedrejeb.richeditor.model/TextPaddingValues // com.mohamedrejeb.richeditor.model/TextPaddingValues.copy|copy(androidx.compose.ui.unit.TextUnit;androidx.compose.ui.unit.TextUnit){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.mohamedrejeb.richeditor.model/TextPaddingValues.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.mohamedrejeb.richeditor.model/TextPaddingValues.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.mohamedrejeb.richeditor.model/TextPaddingValues.toString|toString(){}[0]
}

final class com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType { // com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType.toString|toString(){}[0]

    final object Companion { // com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType.Companion|null[0]
        final val Circle // com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType.Companion.Circle|{}Circle[0]
            final fun <get-Circle>(): com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType // com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType.Companion.Circle.<get-Circle>|<get-Circle>(){}[0]
        final val Disc // com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType.Companion.Disc|{}Disc[0]
            final fun <get-Disc>(): com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType // com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType.Companion.Disc.<get-Disc>|<get-Disc>(){}[0]
        final val Square // com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType.Companion.Square|{}Square[0]
            final fun <get-Square>(): com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType // com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType.Companion.Square.<get-Square>|<get-Square>(){}[0]

        final fun from(kotlin.collections/List<kotlin/String>): com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType // com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType.Companion.from|from(kotlin.collections.List<kotlin.String>){}[0]
        final fun from(kotlin/Array<out kotlin/String>...): com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType // com.mohamedrejeb.richeditor.paragraph.type/UnorderedListStyleType.Companion.from|from(kotlin.Array<out|kotlin.String>...){}[0]
    }
}

final class com.mohamedrejeb.richeditor.ui.material3/RichTextEditorColors { // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorColors|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorColors.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorColors.hashCode|hashCode(){}[0]
}

final object com.mohamedrejeb.richeditor.model/DefaultImageLoader : com.mohamedrejeb.richeditor.model/ImageLoader { // com.mohamedrejeb.richeditor.model/DefaultImageLoader|null[0]
    final fun load(kotlin/Any, androidx.compose.runtime/Composer?, kotlin/Int): com.mohamedrejeb.richeditor.model/ImageData? // com.mohamedrejeb.richeditor.model/DefaultImageLoader.load|load(kotlin.Any;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
}

final object com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults { // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults|null[0]
    final val FocusedBorderThickness // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.FocusedBorderThickness|{}FocusedBorderThickness[0]
        final fun <get-FocusedBorderThickness>(): androidx.compose.ui.unit/Dp // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.FocusedBorderThickness.<get-FocusedBorderThickness>|<get-FocusedBorderThickness>(){}[0]
    final val MinHeight // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.MinHeight|{}MinHeight[0]
        final fun <get-MinHeight>(): androidx.compose.ui.unit/Dp // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.MinHeight.<get-MinHeight>|<get-MinHeight>(){}[0]
    final val MinWidth // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.MinWidth|{}MinWidth[0]
        final fun <get-MinWidth>(): androidx.compose.ui.unit/Dp // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.MinWidth.<get-MinWidth>|<get-MinWidth>(){}[0]
    final val UnfocusedBorderThickness // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.UnfocusedBorderThickness|{}UnfocusedBorderThickness[0]
        final fun <get-UnfocusedBorderThickness>(): androidx.compose.ui.unit/Dp // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.UnfocusedBorderThickness.<get-UnfocusedBorderThickness>|<get-UnfocusedBorderThickness>(){}[0]
    final val filledShape // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.filledShape|{}filledShape[0]
        final fun <get-filledShape>(androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.ui.graphics/Shape // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.filledShape.<get-filledShape>|<get-filledShape>(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
    final val outlinedShape // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.outlinedShape|{}outlinedShape[0]
        final fun <get-outlinedShape>(androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.ui.graphics/Shape // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.outlinedShape.<get-outlinedShape>|<get-outlinedShape>(androidx.compose.runtime.Composer?;kotlin.Int){}[0]

    final fun (androidx.compose.ui/Modifier).indicatorLine(kotlin/Boolean, kotlin/Boolean, androidx.compose.foundation.interaction/InteractionSource, com.mohamedrejeb.richeditor.ui.material3/RichTextEditorColors, androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ...): androidx.compose.ui/Modifier // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.indicatorLine|indicatorLine@androidx.compose.ui.Modifier(kotlin.Boolean;kotlin.Boolean;androidx.compose.foundation.interaction.InteractionSource;com.mohamedrejeb.richeditor.ui.material3.RichTextEditorColors;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
    final fun FilledContainerBox(kotlin/Boolean, kotlin/Boolean, androidx.compose.foundation.interaction/InteractionSource, com.mohamedrejeb.richeditor.ui.material3/RichTextEditorColors, androidx.compose.ui.graphics/Shape?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.FilledContainerBox|FilledContainerBox(kotlin.Boolean;kotlin.Boolean;androidx.compose.foundation.interaction.InteractionSource;com.mohamedrejeb.richeditor.ui.material3.RichTextEditorColors;androidx.compose.ui.graphics.Shape?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
    final fun OutlinedBorderContainerBox(kotlin/Boolean, kotlin/Boolean, androidx.compose.foundation.interaction/InteractionSource, com.mohamedrejeb.richeditor.ui.material3/RichTextEditorColors, androidx.compose.ui.graphics/Shape?, androidx.compose.ui.unit/Dp, androidx.compose.ui.unit/Dp, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.OutlinedBorderContainerBox|OutlinedBorderContainerBox(kotlin.Boolean;kotlin.Boolean;androidx.compose.foundation.interaction.InteractionSource;com.mohamedrejeb.richeditor.ui.material3.RichTextEditorColors;androidx.compose.ui.graphics.Shape?;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
    final fun OutlinedRichTextEditorDecorationBox(kotlin/String, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, kotlin/Boolean, kotlin/Boolean, androidx.compose.ui.text.input/VisualTransformation, androidx.compose.foundation.interaction/InteractionSource, kotlin/Boolean, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, com.mohamedrejeb.richeditor.ui.material3/RichTextEditorColors?, androidx.compose.foundation.layout/PaddingValues?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.OutlinedRichTextEditorDecorationBox|OutlinedRichTextEditorDecorationBox(kotlin.String;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.text.input.VisualTransformation;androidx.compose.foundation.interaction.InteractionSource;kotlin.Boolean;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;com.mohamedrejeb.richeditor.ui.material3.RichTextEditorColors?;androidx.compose.foundation.layout.PaddingValues?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
    final fun RichTextEditorDecorationBox(kotlin/String, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, kotlin/Boolean, kotlin/Boolean, androidx.compose.ui.text.input/VisualTransformation, androidx.compose.foundation.interaction/InteractionSource, kotlin/Boolean, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, androidx.compose.ui.graphics/Shape?, com.mohamedrejeb.richeditor.ui.material3/RichTextEditorColors?, androidx.compose.foundation.layout/PaddingValues?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.RichTextEditorDecorationBox|RichTextEditorDecorationBox(kotlin.String;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.text.input.VisualTransformation;androidx.compose.foundation.interaction.InteractionSource;kotlin.Boolean;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;androidx.compose.ui.graphics.Shape?;com.mohamedrejeb.richeditor.ui.material3.RichTextEditorColors?;androidx.compose.foundation.layout.PaddingValues?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
    final fun outlinedRichTextEditorColors(androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.foundation.text.selection/TextSelectionColors?, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int): com.mohamedrejeb.richeditor.ui.material3/RichTextEditorColors // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.outlinedRichTextEditorColors|outlinedRichTextEditorColors(androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.foundation.text.selection.TextSelectionColors?;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
    final fun outlinedRichTextEditorPadding(androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ...): androidx.compose.foundation.layout/PaddingValues // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.outlinedRichTextEditorPadding|outlinedRichTextEditorPadding(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
    final fun richTextEditorColors(androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.foundation.text.selection/TextSelectionColors?, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.ui.graphics/Color, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int): com.mohamedrejeb.richeditor.ui.material3/RichTextEditorColors // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.richTextEditorColors|richTextEditorColors(androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.foundation.text.selection.TextSelectionColors?;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.ui.graphics.Color;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
    final fun richTextEditorWithLabelPadding(androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ...): androidx.compose.foundation.layout/PaddingValues // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.richTextEditorWithLabelPadding|richTextEditorWithLabelPadding(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
    final fun richTextEditorWithoutLabelPadding(androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ..., androidx.compose.ui.unit/Dp = ...): androidx.compose.foundation.layout/PaddingValues // com.mohamedrejeb.richeditor.ui.material3/RichTextEditorDefaults.richTextEditorWithoutLabelPadding|richTextEditorWithoutLabelPadding(androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp;androidx.compose.ui.unit.Dp){}[0]
}

final val com.mohamedrejeb.richeditor.model/LocalImageLoader // com.mohamedrejeb.richeditor.model/LocalImageLoader|{}LocalImageLoader[0]
    final fun <get-LocalImageLoader>(): androidx.compose.runtime/ProvidableCompositionLocal<com.mohamedrejeb.richeditor.model/ImageLoader> // com.mohamedrejeb.richeditor.model/LocalImageLoader.<get-LocalImageLoader>|<get-LocalImageLoader>(){}[0]
final val com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_DefaultImageLoader$stableprop // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_DefaultImageLoader$stableprop|#static{}com_mohamedrejeb_richeditor_model_DefaultImageLoader$stableprop[0]
final val com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_ImageData$stableprop // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_ImageData$stableprop|#static{}com_mohamedrejeb_richeditor_model_ImageData$stableprop[0]
final val com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpan$stableprop // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpan$stableprop|#static{}com_mohamedrejeb_richeditor_model_RichSpan$stableprop[0]
final val com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpanStyle_Code$stableprop // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpanStyle_Code$stableprop|#static{}com_mohamedrejeb_richeditor_model_RichSpanStyle_Code$stableprop[0]
final val com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpanStyle_Default$stableprop // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpanStyle_Default$stableprop|#static{}com_mohamedrejeb_richeditor_model_RichSpanStyle_Default$stableprop[0]
final val com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpanStyle_Image$stableprop // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpanStyle_Image$stableprop|#static{}com_mohamedrejeb_richeditor_model_RichSpanStyle_Image$stableprop[0]
final val com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpanStyle_Link$stableprop // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpanStyle_Link$stableprop|#static{}com_mohamedrejeb_richeditor_model_RichSpanStyle_Link$stableprop[0]
final val com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichTextConfig$stableprop // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichTextConfig$stableprop|#static{}com_mohamedrejeb_richeditor_model_RichTextConfig$stableprop[0]
final val com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichTextState$stableprop // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichTextState$stableprop|#static{}com_mohamedrejeb_richeditor_model_RichTextState$stableprop[0]
final val com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_TextPaddingValues$stableprop // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_TextPaddingValues$stableprop|#static{}com_mohamedrejeb_richeditor_model_TextPaddingValues$stableprop[0]
final val com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_DefaultParagraph$stableprop // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_DefaultParagraph$stableprop|#static{}com_mohamedrejeb_richeditor_paragraph_type_DefaultParagraph$stableprop[0]
final val com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedList$stableprop // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedList$stableprop|#static{}com_mohamedrejeb_richeditor_paragraph_type_OrderedList$stableprop[0]
final val com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Arabic$stableprop // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Arabic$stableprop|#static{}com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Arabic$stableprop[0]
final val com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_ArabicIndic$stableprop // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_ArabicIndic$stableprop|#static{}com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_ArabicIndic$stableprop[0]
final val com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Decimal$stableprop // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Decimal$stableprop|#static{}com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Decimal$stableprop[0]
final val com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_LowerAlpha$stableprop // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_LowerAlpha$stableprop|#static{}com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_LowerAlpha$stableprop[0]
final val com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_LowerRoman$stableprop // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_LowerRoman$stableprop|#static{}com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_LowerRoman$stableprop[0]
final val com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Multiple$stableprop // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Multiple$stableprop|#static{}com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Multiple$stableprop[0]
final val com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_UpperAlpha$stableprop // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_UpperAlpha$stableprop|#static{}com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_UpperAlpha$stableprop[0]
final val com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_UpperRoman$stableprop // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_UpperRoman$stableprop|#static{}com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_UpperRoman$stableprop[0]
final val com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_UnorderedList$stableprop // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_UnorderedList$stableprop|#static{}com_mohamedrejeb_richeditor_paragraph_type_UnorderedList$stableprop[0]
final val com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_UnorderedListStyleType$stableprop // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_UnorderedListStyleType$stableprop|#static{}com_mohamedrejeb_richeditor_paragraph_type_UnorderedListStyleType$stableprop[0]
final val com.mohamedrejeb.richeditor.paragraph/com_mohamedrejeb_richeditor_paragraph_RichParagraph$stableprop // com.mohamedrejeb.richeditor.paragraph/com_mohamedrejeb_richeditor_paragraph_RichParagraph$stableprop|#static{}com_mohamedrejeb_richeditor_paragraph_RichParagraph$stableprop[0]
final val com.mohamedrejeb.richeditor.parser.html/com_mohamedrejeb_richeditor_parser_html_CssDecoder$stableprop // com.mohamedrejeb.richeditor.parser.html/com_mohamedrejeb_richeditor_parser_html_CssDecoder$stableprop|#static{}com_mohamedrejeb_richeditor_parser_html_CssDecoder$stableprop[0]
final val com.mohamedrejeb.richeditor.parser.html/com_mohamedrejeb_richeditor_parser_html_CssDecoder_HtmlStylingFormat$stableprop // com.mohamedrejeb.richeditor.parser.html/com_mohamedrejeb_richeditor_parser_html_CssDecoder_HtmlStylingFormat$stableprop|#static{}com_mohamedrejeb_richeditor_parser_html_CssDecoder_HtmlStylingFormat$stableprop[0]
final val com.mohamedrejeb.richeditor.parser.html/com_mohamedrejeb_richeditor_parser_html_CssEncoder$stableprop // com.mohamedrejeb.richeditor.parser.html/com_mohamedrejeb_richeditor_parser_html_CssEncoder$stableprop|#static{}com_mohamedrejeb_richeditor_parser_html_CssEncoder$stableprop[0]
final val com.mohamedrejeb.richeditor.parser.html/com_mohamedrejeb_richeditor_parser_html_RichTextStateHtmlParser$stableprop // com.mohamedrejeb.richeditor.parser.html/com_mohamedrejeb_richeditor_parser_html_RichTextStateHtmlParser$stableprop|#static{}com_mohamedrejeb_richeditor_parser_html_RichTextStateHtmlParser$stableprop[0]
final val com.mohamedrejeb.richeditor.parser.markdown/com_mohamedrejeb_richeditor_parser_markdown_RichTextStateMarkdownParser$stableprop // com.mohamedrejeb.richeditor.parser.markdown/com_mohamedrejeb_richeditor_parser_markdown_RichTextStateMarkdownParser$stableprop|#static{}com_mohamedrejeb_richeditor_parser_markdown_RichTextStateMarkdownParser$stableprop[0]
final val com.mohamedrejeb.richeditor.ui.material3.tokens/com_mohamedrejeb_richeditor_ui_material3_tokens_FiledRichTextEditorTokens$stableprop // com.mohamedrejeb.richeditor.ui.material3.tokens/com_mohamedrejeb_richeditor_ui_material3_tokens_FiledRichTextEditorTokens$stableprop|#static{}com_mohamedrejeb_richeditor_ui_material3_tokens_FiledRichTextEditorTokens$stableprop[0]
final val com.mohamedrejeb.richeditor.ui.material3.tokens/com_mohamedrejeb_richeditor_ui_material3_tokens_OutlinedRichTextEditorTokens$stableprop // com.mohamedrejeb.richeditor.ui.material3.tokens/com_mohamedrejeb_richeditor_ui_material3_tokens_OutlinedRichTextEditorTokens$stableprop|#static{}com_mohamedrejeb_richeditor_ui_material3_tokens_OutlinedRichTextEditorTokens$stableprop[0]
final val com.mohamedrejeb.richeditor.ui.material3/com_mohamedrejeb_richeditor_ui_material3_RichTextEditorColors$stableprop // com.mohamedrejeb.richeditor.ui.material3/com_mohamedrejeb_richeditor_ui_material3_RichTextEditorColors$stableprop|#static{}com_mohamedrejeb_richeditor_ui_material3_RichTextEditorColors$stableprop[0]
final val com.mohamedrejeb.richeditor.ui.material3/com_mohamedrejeb_richeditor_ui_material3_RichTextEditorDefaults$stableprop // com.mohamedrejeb.richeditor.ui.material3/com_mohamedrejeb_richeditor_ui_material3_RichTextEditorDefaults$stableprop|#static{}com_mohamedrejeb_richeditor_ui_material3_RichTextEditorDefaults$stableprop[0]
final val com.mohamedrejeb.richeditor.ui/com_mohamedrejeb_richeditor_ui_RichTextClipboardManager$stableprop // com.mohamedrejeb.richeditor.ui/com_mohamedrejeb_richeditor_ui_RichTextClipboardManager$stableprop|#static{}com_mohamedrejeb_richeditor_ui_RichTextClipboardManager$stableprop[0]

final fun (androidx.compose.ui.text.style/TextDecoration).com.mohamedrejeb.richeditor.utils/minus(androidx.compose.ui.text.style/TextDecoration): androidx.compose.ui.text.style/TextDecoration // com.mohamedrejeb.richeditor.utils/minus|minus@androidx.compose.ui.text.style.TextDecoration(androidx.compose.ui.text.style.TextDecoration){}[0]
final fun (androidx.compose.ui.text/TextLayoutResult).com.mohamedrejeb.richeditor.utils/getBoundingBoxes(kotlin/Int, kotlin/Int, kotlin/Boolean = ...): kotlin.collections/List<androidx.compose.ui.geometry/Rect> // com.mohamedrejeb.richeditor.utils/getBoundingBoxes|getBoundingBoxes@androidx.compose.ui.text.TextLayoutResult(kotlin.Int;kotlin.Int;kotlin.Boolean){}[0]
final fun (kotlin/Float).com.mohamedrejeb.richeditor.utils/maxDecimals(kotlin/Int): kotlin/Float // com.mohamedrejeb.richeditor.utils/maxDecimals|maxDecimals@kotlin.Float(kotlin.Int){}[0]
final fun com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_DefaultImageLoader$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_DefaultImageLoader$stableprop_getter|com_mohamedrejeb_richeditor_model_DefaultImageLoader$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_ImageData$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_ImageData$stableprop_getter|com_mohamedrejeb_richeditor_model_ImageData$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpan$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpan$stableprop_getter|com_mohamedrejeb_richeditor_model_RichSpan$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpanStyle_Code$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpanStyle_Code$stableprop_getter|com_mohamedrejeb_richeditor_model_RichSpanStyle_Code$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpanStyle_Default$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpanStyle_Default$stableprop_getter|com_mohamedrejeb_richeditor_model_RichSpanStyle_Default$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpanStyle_Image$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpanStyle_Image$stableprop_getter|com_mohamedrejeb_richeditor_model_RichSpanStyle_Image$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpanStyle_Link$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichSpanStyle_Link$stableprop_getter|com_mohamedrejeb_richeditor_model_RichSpanStyle_Link$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichTextConfig$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichTextConfig$stableprop_getter|com_mohamedrejeb_richeditor_model_RichTextConfig$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichTextState$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_RichTextState$stableprop_getter|com_mohamedrejeb_richeditor_model_RichTextState$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_TextPaddingValues$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.model/com_mohamedrejeb_richeditor_model_TextPaddingValues$stableprop_getter|com_mohamedrejeb_richeditor_model_TextPaddingValues$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.model/rememberRichTextState(androidx.compose.runtime/Composer?, kotlin/Int): com.mohamedrejeb.richeditor.model/RichTextState // com.mohamedrejeb.richeditor.model/rememberRichTextState|rememberRichTextState(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_DefaultParagraph$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_DefaultParagraph$stableprop_getter|com_mohamedrejeb_richeditor_paragraph_type_DefaultParagraph$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedList$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedList$stableprop_getter|com_mohamedrejeb_richeditor_paragraph_type_OrderedList$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Arabic$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Arabic$stableprop_getter|com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Arabic$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_ArabicIndic$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_ArabicIndic$stableprop_getter|com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_ArabicIndic$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Decimal$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Decimal$stableprop_getter|com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Decimal$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_LowerAlpha$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_LowerAlpha$stableprop_getter|com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_LowerAlpha$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_LowerRoman$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_LowerRoman$stableprop_getter|com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_LowerRoman$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Multiple$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Multiple$stableprop_getter|com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_Multiple$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_UpperAlpha$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_UpperAlpha$stableprop_getter|com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_UpperAlpha$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_UpperRoman$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_UpperRoman$stableprop_getter|com_mohamedrejeb_richeditor_paragraph_type_OrderedListStyleType_UpperRoman$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_UnorderedList$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_UnorderedList$stableprop_getter|com_mohamedrejeb_richeditor_paragraph_type_UnorderedList$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_UnorderedListStyleType$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.paragraph.type/com_mohamedrejeb_richeditor_paragraph_type_UnorderedListStyleType$stableprop_getter|com_mohamedrejeb_richeditor_paragraph_type_UnorderedListStyleType$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.paragraph/com_mohamedrejeb_richeditor_paragraph_RichParagraph$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.paragraph/com_mohamedrejeb_richeditor_paragraph_RichParagraph$stableprop_getter|com_mohamedrejeb_richeditor_paragraph_RichParagraph$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.parser.html/com_mohamedrejeb_richeditor_parser_html_CssDecoder$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.parser.html/com_mohamedrejeb_richeditor_parser_html_CssDecoder$stableprop_getter|com_mohamedrejeb_richeditor_parser_html_CssDecoder$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.parser.html/com_mohamedrejeb_richeditor_parser_html_CssDecoder_HtmlStylingFormat$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.parser.html/com_mohamedrejeb_richeditor_parser_html_CssDecoder_HtmlStylingFormat$stableprop_getter|com_mohamedrejeb_richeditor_parser_html_CssDecoder_HtmlStylingFormat$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.parser.html/com_mohamedrejeb_richeditor_parser_html_CssEncoder$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.parser.html/com_mohamedrejeb_richeditor_parser_html_CssEncoder$stableprop_getter|com_mohamedrejeb_richeditor_parser_html_CssEncoder$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.parser.html/com_mohamedrejeb_richeditor_parser_html_RichTextStateHtmlParser$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.parser.html/com_mohamedrejeb_richeditor_parser_html_RichTextStateHtmlParser$stableprop_getter|com_mohamedrejeb_richeditor_parser_html_RichTextStateHtmlParser$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.parser.markdown/com_mohamedrejeb_richeditor_parser_markdown_RichTextStateMarkdownParser$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.parser.markdown/com_mohamedrejeb_richeditor_parser_markdown_RichTextStateMarkdownParser$stableprop_getter|com_mohamedrejeb_richeditor_parser_markdown_RichTextStateMarkdownParser$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.ui.material/OutlinedRichTextEditor(com.mohamedrejeb.richeditor.model/RichTextState, androidx.compose.ui/Modifier?, kotlin/Boolean, kotlin/Boolean, androidx.compose.ui.text/TextStyle?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Boolean, androidx.compose.foundation.text/KeyboardOptions?, androidx.compose.foundation.text/KeyboardActions?, kotlin/Boolean, kotlin/Int, kotlin/Int, kotlin/Int, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.ui.graphics/Shape?, androidx.compose.material/TextFieldColors?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // com.mohamedrejeb.richeditor.ui.material/OutlinedRichTextEditor|OutlinedRichTextEditor(com.mohamedrejeb.richeditor.model.RichTextState;androidx.compose.ui.Modifier?;kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.text.TextStyle?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Boolean;androidx.compose.foundation.text.KeyboardOptions?;androidx.compose.foundation.text.KeyboardActions?;kotlin.Boolean;kotlin.Int;kotlin.Int;kotlin.Int;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.ui.graphics.Shape?;androidx.compose.material.TextFieldColors?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun com.mohamedrejeb.richeditor.ui.material/RichText(com.mohamedrejeb.richeditor.model/RichTextState, androidx.compose.ui/Modifier?, androidx.compose.ui.graphics/Color, androidx.compose.ui.unit/TextUnit, androidx.compose.ui.text.font/FontStyle?, androidx.compose.ui.text.font/FontWeight?, androidx.compose.ui.text.font/FontFamily?, androidx.compose.ui.unit/TextUnit, androidx.compose.ui.text.style/TextDecoration?, androidx.compose.ui.text.style/TextAlign, androidx.compose.ui.unit/TextUnit, androidx.compose.ui.text.style/TextOverflow, kotlin/Boolean, kotlin/Int, kotlin/Int, kotlin.collections/Map<kotlin/String, androidx.compose.foundation.text/InlineTextContent>?, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.ui.text/TextStyle?, com.mohamedrejeb.richeditor.model/ImageLoader?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // com.mohamedrejeb.richeditor.ui.material/RichText|RichText(com.mohamedrejeb.richeditor.model.RichTextState;androidx.compose.ui.Modifier?;androidx.compose.ui.graphics.Color;androidx.compose.ui.unit.TextUnit;androidx.compose.ui.text.font.FontStyle?;androidx.compose.ui.text.font.FontWeight?;androidx.compose.ui.text.font.FontFamily?;androidx.compose.ui.unit.TextUnit;androidx.compose.ui.text.style.TextDecoration?;androidx.compose.ui.text.style.TextAlign;androidx.compose.ui.unit.TextUnit;androidx.compose.ui.text.style.TextOverflow;kotlin.Boolean;kotlin.Int;kotlin.Int;kotlin.collections.Map<kotlin.String,androidx.compose.foundation.text.InlineTextContent>?;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.ui.text.TextStyle?;com.mohamedrejeb.richeditor.model.ImageLoader?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun com.mohamedrejeb.richeditor.ui.material/RichTextEditor(com.mohamedrejeb.richeditor.model/RichTextState, androidx.compose.ui/Modifier?, kotlin/Boolean, kotlin/Boolean, androidx.compose.ui.text/TextStyle?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Boolean, androidx.compose.foundation.text/KeyboardOptions?, androidx.compose.foundation.text/KeyboardActions?, kotlin/Boolean, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.ui.graphics/Shape?, androidx.compose.material/TextFieldColors?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // com.mohamedrejeb.richeditor.ui.material/RichTextEditor|RichTextEditor(com.mohamedrejeb.richeditor.model.RichTextState;androidx.compose.ui.Modifier?;kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.text.TextStyle?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Boolean;androidx.compose.foundation.text.KeyboardOptions?;androidx.compose.foundation.text.KeyboardActions?;kotlin.Boolean;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.ui.graphics.Shape?;androidx.compose.material.TextFieldColors?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun com.mohamedrejeb.richeditor.ui.material3.tokens/com_mohamedrejeb_richeditor_ui_material3_tokens_FiledRichTextEditorTokens$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.ui.material3.tokens/com_mohamedrejeb_richeditor_ui_material3_tokens_FiledRichTextEditorTokens$stableprop_getter|com_mohamedrejeb_richeditor_ui_material3_tokens_FiledRichTextEditorTokens$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.ui.material3.tokens/com_mohamedrejeb_richeditor_ui_material3_tokens_OutlinedRichTextEditorTokens$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.ui.material3.tokens/com_mohamedrejeb_richeditor_ui_material3_tokens_OutlinedRichTextEditorTokens$stableprop_getter|com_mohamedrejeb_richeditor_ui_material3_tokens_OutlinedRichTextEditorTokens$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.ui.material3/OutlinedRichTextEditor(com.mohamedrejeb.richeditor.model/RichTextState, androidx.compose.ui/Modifier?, kotlin/Boolean, kotlin/Boolean, androidx.compose.ui.text/TextStyle?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Boolean, androidx.compose.foundation.text/KeyboardOptions?, androidx.compose.foundation.text/KeyboardActions?, kotlin/Boolean, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.ui.graphics/Shape?, com.mohamedrejeb.richeditor.ui.material3/RichTextEditorColors?, androidx.compose.foundation.layout/PaddingValues?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int) // com.mohamedrejeb.richeditor.ui.material3/OutlinedRichTextEditor|OutlinedRichTextEditor(com.mohamedrejeb.richeditor.model.RichTextState;androidx.compose.ui.Modifier?;kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.text.TextStyle?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Boolean;androidx.compose.foundation.text.KeyboardOptions?;androidx.compose.foundation.text.KeyboardActions?;kotlin.Boolean;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.ui.graphics.Shape?;com.mohamedrejeb.richeditor.ui.material3.RichTextEditorColors?;androidx.compose.foundation.layout.PaddingValues?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun com.mohamedrejeb.richeditor.ui.material3/RichText(com.mohamedrejeb.richeditor.model/RichTextState, androidx.compose.ui/Modifier?, androidx.compose.ui.graphics/Color, androidx.compose.ui.unit/TextUnit, androidx.compose.ui.text.font/FontStyle?, androidx.compose.ui.text.font/FontWeight?, androidx.compose.ui.text.font/FontFamily?, androidx.compose.ui.unit/TextUnit, androidx.compose.ui.text.style/TextDecoration?, androidx.compose.ui.text.style/TextAlign, androidx.compose.ui.unit/TextUnit, androidx.compose.ui.text.style/TextOverflow, kotlin/Boolean, kotlin/Int, kotlin.collections/Map<kotlin/String, androidx.compose.foundation.text/InlineTextContent>?, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.ui.text/TextStyle?, com.mohamedrejeb.richeditor.model/ImageLoader?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // com.mohamedrejeb.richeditor.ui.material3/RichText|RichText(com.mohamedrejeb.richeditor.model.RichTextState;androidx.compose.ui.Modifier?;androidx.compose.ui.graphics.Color;androidx.compose.ui.unit.TextUnit;androidx.compose.ui.text.font.FontStyle?;androidx.compose.ui.text.font.FontWeight?;androidx.compose.ui.text.font.FontFamily?;androidx.compose.ui.unit.TextUnit;androidx.compose.ui.text.style.TextDecoration?;androidx.compose.ui.text.style.TextAlign;androidx.compose.ui.unit.TextUnit;androidx.compose.ui.text.style.TextOverflow;kotlin.Boolean;kotlin.Int;kotlin.collections.Map<kotlin.String,androidx.compose.foundation.text.InlineTextContent>?;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.ui.text.TextStyle?;com.mohamedrejeb.richeditor.model.ImageLoader?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun com.mohamedrejeb.richeditor.ui.material3/RichTextEditor(com.mohamedrejeb.richeditor.model/RichTextState, androidx.compose.ui/Modifier?, kotlin/Boolean, kotlin/Boolean, androidx.compose.ui.text/TextStyle?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, kotlin/Boolean, androidx.compose.foundation.text/KeyboardOptions?, androidx.compose.foundation.text/KeyboardActions?, kotlin/Boolean, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.ui.graphics/Shape?, com.mohamedrejeb.richeditor.ui.material3/RichTextEditorColors?, androidx.compose.foundation.layout/PaddingValues?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Int) // com.mohamedrejeb.richeditor.ui.material3/RichTextEditor|RichTextEditor(com.mohamedrejeb.richeditor.model.RichTextState;androidx.compose.ui.Modifier?;kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.text.TextStyle?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;kotlin.Boolean;androidx.compose.foundation.text.KeyboardOptions?;androidx.compose.foundation.text.KeyboardActions?;kotlin.Boolean;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.ui.graphics.Shape?;com.mohamedrejeb.richeditor.ui.material3.RichTextEditorColors?;androidx.compose.foundation.layout.PaddingValues?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun com.mohamedrejeb.richeditor.ui.material3/com_mohamedrejeb_richeditor_ui_material3_RichTextEditorColors$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.ui.material3/com_mohamedrejeb_richeditor_ui_material3_RichTextEditorColors$stableprop_getter|com_mohamedrejeb_richeditor_ui_material3_RichTextEditorColors$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.ui.material3/com_mohamedrejeb_richeditor_ui_material3_RichTextEditorDefaults$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.ui.material3/com_mohamedrejeb_richeditor_ui_material3_RichTextEditorDefaults$stableprop_getter|com_mohamedrejeb_richeditor_ui_material3_RichTextEditorDefaults$stableprop_getter(){}[0]
final fun com.mohamedrejeb.richeditor.ui/BasicRichText(com.mohamedrejeb.richeditor.model/RichTextState, androidx.compose.ui/Modifier?, androidx.compose.ui.text/TextStyle?, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.ui.text.style/TextOverflow, kotlin/Boolean, kotlin/Int, kotlin/Int, kotlin.collections/Map<kotlin/String, androidx.compose.foundation.text/InlineTextContent>?, com.mohamedrejeb.richeditor.model/ImageLoader?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int) // com.mohamedrejeb.richeditor.ui/BasicRichText|BasicRichText(com.mohamedrejeb.richeditor.model.RichTextState;androidx.compose.ui.Modifier?;androidx.compose.ui.text.TextStyle?;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.ui.text.style.TextOverflow;kotlin.Boolean;kotlin.Int;kotlin.Int;kotlin.collections.Map<kotlin.String,androidx.compose.foundation.text.InlineTextContent>?;com.mohamedrejeb.richeditor.model.ImageLoader?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
final fun com.mohamedrejeb.richeditor.ui/BasicRichTextEditor(com.mohamedrejeb.richeditor.model/RichTextState, androidx.compose.ui/Modifier?, kotlin/Boolean, kotlin/Boolean, androidx.compose.ui.text/TextStyle?, androidx.compose.foundation.text/KeyboardOptions?, androidx.compose.foundation.text/KeyboardActions?, kotlin/Boolean, kotlin/Boolean, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.ui.graphics/Brush?, kotlin/Function3<kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, androidx.compose.foundation.layout/PaddingValues, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // com.mohamedrejeb.richeditor.ui/BasicRichTextEditor|BasicRichTextEditor(com.mohamedrejeb.richeditor.model.RichTextState;androidx.compose.ui.Modifier?;kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.text.TextStyle?;androidx.compose.foundation.text.KeyboardOptions?;androidx.compose.foundation.text.KeyboardActions?;kotlin.Boolean;kotlin.Boolean;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.ui.graphics.Brush?;kotlin.Function3<kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;androidx.compose.foundation.layout.PaddingValues;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun com.mohamedrejeb.richeditor.ui/BasicRichTextEditor(com.mohamedrejeb.richeditor.model/RichTextState, androidx.compose.ui/Modifier?, kotlin/Boolean, kotlin/Boolean, androidx.compose.ui.text/TextStyle?, androidx.compose.foundation.text/KeyboardOptions?, androidx.compose.foundation.text/KeyboardActions?, kotlin/Boolean, kotlin/Int, kotlin/Int, kotlin/Int, kotlin/Function1<androidx.compose.ui.text/TextLayoutResult, kotlin/Unit>?, androidx.compose.foundation.interaction/MutableInteractionSource?, androidx.compose.ui.graphics/Brush?, kotlin/Function3<kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int, kotlin/Int) // com.mohamedrejeb.richeditor.ui/BasicRichTextEditor|BasicRichTextEditor(com.mohamedrejeb.richeditor.model.RichTextState;androidx.compose.ui.Modifier?;kotlin.Boolean;kotlin.Boolean;androidx.compose.ui.text.TextStyle?;androidx.compose.foundation.text.KeyboardOptions?;androidx.compose.foundation.text.KeyboardActions?;kotlin.Boolean;kotlin.Int;kotlin.Int;kotlin.Int;kotlin.Function1<androidx.compose.ui.text.TextLayoutResult,kotlin.Unit>?;androidx.compose.foundation.interaction.MutableInteractionSource?;androidx.compose.ui.graphics.Brush?;kotlin.Function3<kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>,androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int;kotlin.Int){}[0]
final fun com.mohamedrejeb.richeditor.ui/com_mohamedrejeb_richeditor_ui_RichTextClipboardManager$stableprop_getter(): kotlin/Int // com.mohamedrejeb.richeditor.ui/com_mohamedrejeb_richeditor_ui_RichTextClipboardManager$stableprop_getter|com_mohamedrejeb_richeditor_ui_RichTextClipboardManager$stableprop_getter(){}[0]
